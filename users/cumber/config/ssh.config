# This is a bit finicky and weird.
#
# For normal git use, I have conditional includes configured in Git to
# call ssh with a specific key and passing IdentitiesOnly=yes, which
# will override this and use only the specified key.
#
# But for fetching flake inputs, there is no way to override the SSH
# command line based on the repository url. So instead I use
# IdentitiesOnly=no allowing any SSH key loaded in the agent to be
# used; I can then carefully make sure that the only GitHub key in the
# agent is the one that will work for the repository I need to fetch.
Host github.com
     IdentitiesOnly no

Host smokingkangaroo smokingkangaroo.com
     Hostname    smokingkangaroo.com
     Port        7822
     User        skanga

Host cellfield-github
     User git
     HostName github.com
     IdentityFile ~/.ssh/id_cellfield

Host cellfield.com
     User cellfield22
     IdentityFile ~/.ssh/id_cellfield

     # TODO: Remove these when I can; re-enabling obsolete key
     # algorithms that SSH has now disabled by default, but
     # cellfield.com still requires them
     HostKeyAlgorithms ssh-rsa
     PubkeyAcceptedKeyTypes ssh-rsa


Host xyanalytics.co.nz *.xyanalytics.co.nz
     User ubuntu
     IdentityFile ~/.ssh/id_pmil
     ForwardAgent yes

Host xyleap 45.79.84.65
     User root
     HostName 45.79.84.65
     IdentityFile ~/.ssh/id_pmil


Host grantshub-github
     User git
     HostName github.com
     IdentityFile ~/.ssh/id_grantshub

Host tgh-staging
     User deploy
     HostName 54.71.170.238
     IdentityFile ~/.ssh/id_grantshub

Host tgh-production
     User deploy
     HostName 54.244.31.57
     IdentityFile ~/.ssh/id_grantshub


# In SSH config the *first* value takes precedence, rather than the
# last. So global settings need to come after host-specific ones,
# rather than before, but without a Host match these would be
# interpreted as being part of the previous Host block, not global.
Host *
     AddKeysToAgent yes
     IdentitiesOnly yes
     ServerAliveInterval 60
